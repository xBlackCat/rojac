package ru.rsdn.janus;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "JanusAT", targetNamespace = "http://rsdn.ru/Janus/", wsdlLocation = "http://rsdn.ru/ws/janusAT.asmx?wsdl")
public class JanusAT
        extends Service {

    private final static URL JANUSAT_WSDL_LOCATION;
    private final static WebServiceException JANUSAT_EXCEPTION;
    private final static QName JANUSAT_QNAME = new QName("http://rsdn.ru/Janus/", "JanusAT");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://rsdn.ru/ws/janusAT.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        JANUSAT_WSDL_LOCATION = url;
        JANUSAT_EXCEPTION = e;
    }

    public JanusAT() {
        super(__getWsdlLocation(), JANUSAT_QNAME);
    }

    public JanusAT(WebServiceFeature... features) {
        super(__getWsdlLocation(), JANUSAT_QNAME, features);
    }

    public JanusAT(URL wsdlLocation) {
        super(wsdlLocation, JANUSAT_QNAME);
    }

    public JanusAT(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, JANUSAT_QNAME, features);
    }

    public JanusAT(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public JanusAT(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns JanusATSoap
     */
    @WebEndpoint(name = "JanusATSoap")
    public JanusATSoap getJanusATSoap() {
        return super.getPort(new QName("http://rsdn.ru/Janus/", "JanusATSoap"), JanusATSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns JanusATSoap
     */
    @WebEndpoint(name = "JanusATSoap")
    public JanusATSoap getJanusATSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://rsdn.ru/Janus/", "JanusATSoap"), JanusATSoap.class, features);
    }

    /**
     * @return returns JanusATSoap
     */
    @WebEndpoint(name = "JanusATSoap12")
    public JanusATSoap getJanusATSoap12() {
        return super.getPort(new QName("http://rsdn.ru/Janus/", "JanusATSoap12"), JanusATSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns JanusATSoap
     */
    @WebEndpoint(name = "JanusATSoap12")
    public JanusATSoap getJanusATSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://rsdn.ru/Janus/", "JanusATSoap12"), JanusATSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (JANUSAT_EXCEPTION != null) {
            throw JANUSAT_EXCEPTION;
        }
        return JANUSAT_WSDL_LOCATION;
    }

}
